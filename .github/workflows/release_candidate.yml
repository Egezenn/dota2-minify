name: Release Candidate

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: "Name the release candidate"
        required: true
        default: "Minify-v1.xx.xrcx"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Set version
        shell: pwsh
        run: |
          $releaseName = "${{ github.event.inputs.release_name }}"
          $version = $releaseName.Substring(8)
          Set-Content -Path "version" -Value $version -NoNewline

      - name: Make and activate virtual environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m venv .venv
          .\.venv\Scripts\activate
      - name: Make and activate virtual environment (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m venv .venv
          source ./.venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        run: pyinstaller --noconsole --icon=bin/images/favicon.ico --name=Minify --hidden-import=tkinter --hidden-import=PIL imgui.py

      - name: Move project dependencies
        shell: pwsh
        run: |
          Copy-Item -Path "bin" -Destination "dist\Minify\bin" -Recurse
          Copy-Item -Path "mods" -Destination "dist\Minify\mods" -Recurse
          Copy-Item -Path "version" -Destination "dist\Minify\version"
          Copy-Item -Path "readme.md" -Destination "dist\Minify\readme.md"

      - name: Archiving (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Set-Location dist\Minify
          Compress-Archive -Path ".\*" -DestinationPath "..\..\${{ github.event.inputs.release_name }}-windows.zip"
          Set-Location .\..\..\
      - name: Archiving (Linux)
        shell: pwsh
        if: matrix.os == 'ubuntu-latest'
        run: |
          Set-Location dist/Minify
          Compress-Archive -Path "./*" -DestinationPath "./../../${{ github.event.inputs.release_name }}-linux.zip"
          Set-Location ../..

      - name: Create Release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ github.event.inputs.release_name }}
          files: "${{ github.event.inputs.release_name }}-windows.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ github.event.inputs.release_name }}
          files: "${{ github.event.inputs.release_name }}-linux.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
