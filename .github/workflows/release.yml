name: Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: "Name the release"
        required: true
        default: "Minify-v1."
      prerelease:
        description: "Whether or not release candidate"
        required: true
        type: choice
        options:
          - true
          - false
        default: "true"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Set version
        shell: pwsh
        run: |
          $releaseName = "${{ github.event.inputs.release_name }}"
          $version = $releaseName.Substring(8)
          Set-Content -Path "version" -Value $version -NoNewline
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ inputs.prerelease == 'false' && matrix.os == 'ubuntu-latest' }}
        with:
          commit_message: "Version change"

      - name: Make and activate virtual environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m venv .venv
          .\.venv\Scripts\activate
      - name: Make and activate virtual environment (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m venv .venv
          source ./.venv/bin/activate

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          Get-ChildItem
          Set-Location Minify
          Get-ChildItem

      - name: Build executable
        shell: pwsh
        run: |
          Set-Location Minify
          pyinstaller Minify.spec

      - name: Move project dependencies
        shell: pwsh
        run: |
          Set-Location Minify
          Copy-Item -Path "bin" -Destination "dist\Minify\bin" -Recurse
          Copy-Item -Path "mods" -Destination "dist\Minify\mods" -Recurse
          Copy-Item -Path "..\version" -Destination "dist\Minify\version"
          Copy-Item -Path "..\readme.md" -Destination "dist\Minify\readme.md"
          Copy-Item -Path "..\LICENSE" -Destination "dist\Minify\LICENSE"

      - name: Archiving (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Set-Location Minify\dist\Minify
          Compress-Archive -Path ".\*" -DestinationPath "..\..\..\${{ github.event.inputs.release_name }}-windows.zip"
          Set-Location .\..\..\..\
      - name: Archiving (Linux)
        shell: pwsh
        if: matrix.os == 'ubuntu-latest'
        run: |
          Set-Location Minify/dist/Minify
          Compress-Archive -Path "./*" -DestinationPath "./../../../${{ github.event.inputs.release_name }}-linux.zip"
          Set-Location ../../..

      - name: Create Release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ inputs.prerelease }}
          tag_name: ${{ github.event.inputs.release_name }}
          files: "${{ github.event.inputs.release_name }}-windows.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ inputs.prerelease }}
          tag_name: ${{ github.event.inputs.release_name }}
          files: "${{ github.event.inputs.release_name }}-linux.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
